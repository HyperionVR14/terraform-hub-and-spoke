name: Terraform CI/CD (Hub-Spoke)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

env:
  TF_IN_AUTOMATION: true
  TF_ROOT: .
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          terraform init -input=false
          # ако backend параметрите не са в repo (backend.tf), подай ги тук с -backend-config=...

    #  - name: Terraform Fmt - Commented because failing with error 3
    #    working-directory: ${{ env.TF_ROOT }}
    #    run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ${{ env.TF_ROOT }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -input=false -out=tfplan -var-file="terraform.auto.tfvars"

      - name: Show Plan
        working-directory: ${{ env.TF_ROOT }}
        run: terraform show -no-color tfplan > plan.txt

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            ${{ env.TF_ROOT }}/tfplan
            ${{ env.TF_ROOT }}/plan.txt

      - name: Comment plan in PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          path: plan.txt

  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
